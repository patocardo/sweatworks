name: Deploy Sweatworks on Staging

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      S3_BUCKET_NAME: sweatworks-client
      AWS_REGION: us-east-2
      EC2_USER: ec2-user
      EC2_IP: 3.14.150.93
      PEM_FILE_NAME: patocardo.pem
      S3_BUCKET_CODE: "staging-sweatworks-lambda-code"
      LAMBDA_NAME: "staging-image-resize"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies and build client
      working-directory: ./client
      run: |
        npm install
        npm run build

    - name: Install dependencies
      working-directory: ./lambda/image-resize
      run: npm install

    - name: Package Lambda function
      working-directory: ./lambda/image-resize
      run: zip -r ../image-resize.zip .

    - name: Upload to S3 for Lambda Deployment
      uses: jakejarvis/s3-sync-action@main
      with:
        args: "--acl private"
      env:
        AWS_S3_BUCKET: ${{ env.S3_BUCKET_CODE }}
        AWS_REGION: us-east-2
        SOURCE_DIR: ./lambda/image-resize.zip
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Update Lambda Function Code
      uses: aws-actions/aws-lambda-deploy@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        function-name: ${{ env.LAMBDA_NAME }}
        s3-bucket: ${{ env.S3_BUCKET_CODE }}
        s3-key: "image-resize.zip"

    - name: Upload build to S3 bucket
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read
      env:
        AWS_S3_BUCKET: ${{ env.S3_BUCKET_NAME }}
        AWS_REGION: ${{ env.AWS_REGION }}
        SOURCE_DIR: ./client/build/
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Copy server files to EC2 instance
      uses: appleboy/scp-action@v0.1.2
      with:
        host: ${{ env.EC2_IP }}
        username: ${{ env.EC2_USER }}
        key: ${{ secrets.EC2_PEM_KEY }}
        source: "package.json,server.js"
        target: "/home/ec2-user"

    - name: Connect to EC2 and Install Dependencies
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ env.EC2_IP }}
        username: ${{ env.EC2_USER }}
        key: ${{ secrets.EC2_PEM_KEY }}
        script: |
          cd /home/ec2-user
          npm install
          pm2 restart server
